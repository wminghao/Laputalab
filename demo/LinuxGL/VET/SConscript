Import("*")

JpgeCodePath = '../../LaputaDesktop3/thirdparty/jpeg-compressor_v104_r1/'
GLCodePath = '../../../LaputaApp/Classes/Utilities/GL/'
MainCodePath = '../../LaputaDesktop3/VET/'
GlmCodePath = '../../../LaputaApp/thirdpartylib/glm/'
ImageMagickCodePath = '/opt/local/include/ImageMagick-6/'

VETCflags = CCFLAGS
VETCflags.append( '-Wno-unused' )

VETCPPPath = CPPPATH
VETCPPPath.append( JpgeCodePath )
VETCPPPath.append( GLCodePath )
VETCPPPath.append( MainCodePath )
VETCPPPath.append( GlmCodePath )
VETCPPPath.append( ImageMagickCodePath )

#objects
jpgeObj = env.Object(JpgeCodePath + 'jpge.cpp', CCFLAGS=VETCflags )
timerObj = env.Object(JpgeCodePath + 'timer.cpp', CCFLAGS=VETCflags )
candide3Obj = env.Object(GLCodePath + 'candide3.cpp', CCFLAGS=VETCflags )
candide3TextureObj = env.Object(GLCodePath + 'candide3Texture.cpp', CCFLAGS=VETCflags )
colorObj = env.Object(GLCodePath + 'color.cpp', CCFLAGS=VETCflags )
glassesObj = env.Object(GLCodePath + 'glasses.cpp', CCFLAGS=VETCflags )
glUtilitiesObj = env.Object(GLCodePath + 'glUtilities.cpp', CCFLAGS=VETCflags )
matrixObj = env.Object(GLCodePath + 'matrix.cpp', CCFLAGS=VETCflags )
meshObj = env.Object(GLCodePath + 'mesh.cpp', CCFLAGS=VETCflags )
reflectionTextureObj = env.Object(GLCodePath + 'reflectionTexture.cpp', CCFLAGS=VETCflags )
shaderUtilitiesObj = env.Object(GLCodePath + 'ShaderUtilities.cpp', CCFLAGS=VETCflags )
textureObj = env.Object(GLCodePath + 'texture.cpp', CCFLAGS=VETCflags )
objLoaderObj = env.Object(MainCodePath + 'objloader.cpp', CCFLAGS=VETCflags )
utilitiesObj = env.Object(MainCodePath + 'utilities.cpp', CCFLAGS=VETCflags )
mainObj = env.Object(MainCodePath + 'main.cpp', CCFLAGS=VETCflags )

#target
VETProg = File("prog/VET")

progs.append( VETProg )
env.Program( VETProg,
	     [ jpgeObj,
	       timerObj,
	       candide3Obj,
	       candide3TextureObj,
	       colorObj,
	       glassesObj,
	       glUtilitiesObj,
	       matrixObj,
	       meshObj,
	       reflectionTextureObj,
	       ShaderUtilitiesObj,
	       textureObj,
	       objloaderObj,
	       utilitiesObj,
	       mainObj],	
	       LIBS=['glfw3', 'GL', 'GLEW', 'X11', 'Xxf86vm', 'Xrandr', 'Xi', 'Xinerama', 'Xcursor', 'pthread', 'rt', 'dl', 'm', 'LandMark', 'opencv_calib3d', 'opencv_contrib', 'opencv_core', 'opencv_features2d', 'opencv_flann','opencv_gpu', 'opencv_highgui', 'opencv_imgproc','opencv_legacy', 'opencv_ml', 'opencv_nonfree', 'opencv_objdetect', 'opencv_ocl', 'opencv_photo', 'opencv_stitching', 'opencv_superres', 'opencv_ts', 'opencv_video', 'opencv_videostab', 'jansson'],
	       LIBPATH = ['/usr/lib', '/usr/local/lib', '/opt/local/lib'],
	       CCFLAGS=VETCflags,
	       CPPPATH=VETCPPPath)