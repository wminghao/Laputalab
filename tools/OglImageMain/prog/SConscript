Import("*")
import os

buildpath=os.getcwd()+"/../../../"

GLCodePath =  buildpath+'../../LaputaApp/Classes/Utilities/GL/'
MainCodePath =  "./"
GlmCodePath =  buildpath+'../../LaputaApp/thirdpartylib/glm/'
PlatformPath =  buildpath+'../../LaputaApp/'
ImageMagickPath = '/usr/include/ImageMagick/'

OGLIMAGEMAINCflags = CCFLAGS
OGLIMAGEMAINCflags.append( '-Wno-unused' )

OGLIMAGEMAINCPPPath = []
OGLIMAGEMAINCPPPath.append( GLCodePath )
OGLIMAGEMAINCPPPath.append( MainCodePath )
OGLIMAGEMAINCPPPath.append( GlmCodePath )
OGLIMAGEMAINCPPPath.append( PlatformPath )
OGLIMAGEMAINCPPPath.append( ImageMagickPath )

#objects
candide3Obj = env.Object(GLCodePath + 'candide3.cpp', CCFLAGS=OGLIMAGEMAINCflags )
candide3TextureObj = env.Object(GLCodePath + 'candide3Texture.cpp', CCFLAGS=OGLIMAGEMAINCflags )
colorObj = env.Object(GLCodePath + 'color.cpp', CCFLAGS=OGLIMAGEMAINCflags )
glassesObj = env.Object(GLCodePath + 'glasses.cpp', CCFLAGS=OGLIMAGEMAINCflags )
glUtilitiesObj = env.Object(GLCodePath + 'glUtilities.cpp', CCFLAGS=OGLIMAGEMAINCflags )
matrixObj = env.Object(GLCodePath + 'matrix.c', CCFLAGS=OGLIMAGEMAINCflags )
meshObj = env.Object(GLCodePath + 'mesh.cpp', CCFLAGS=OGLIMAGEMAINCflags )
reflectionTextureObj = env.Object(GLCodePath + 'reflectionTexture.cpp', CCFLAGS=OGLIMAGEMAINCflags )
ShaderUtilitiesObj = env.Object(GLCodePath + 'ShaderUtilities.c', CCFLAGS=OGLIMAGEMAINCflags )
textureObj = env.Object(GLCodePath + 'texture.cpp', CCFLAGS=OGLIMAGEMAINCflags )
loggerObj = env.Object(MainCodePath + 'utility/Logger.cpp', CCFLAGS=OGLIMAGEMAINCflags )
utilitiesObj = env.Object(MainCodePath + 'utilities.cpp', CCFLAGS=OGLIMAGEMAINCflags )
mainObj = env.Object(MainCodePath + 'OglImageMain.cpp', CCFLAGS=OGLIMAGEMAINCflags )

#target without Window, headless
OglImageMainProg = File("OglImageMain")

progs.append( OglImageMainProg )
env.Replace( CPPPATH = OGLIMAGEMAINCPPPath )
env.Program( OglImageMainProg,
	     [ candide3Obj,
	       candide3TextureObj,
	       colorObj,
	       glassesObj,
	       glUtilitiesObj,
	       matrixObj,
	       meshObj,
	       reflectionTextureObj,
	       ShaderUtilitiesObj,
	       textureObj,
	       loggerObj,
	       utilitiesObj,
	       mainObj],	
	     LIBS=['GL', 'OSMesa', 'pthread', 'rt', 'dl', 'm', 'assimp', 'MagickWand', 'opencv_calib3d', 'opencv_contrib', 'opencv_core', 'opencv_features2d', 'opencv_flann','opencv_gpu', 'opencv_highgui', 'opencv_imgproc','opencv_legacy', 'opencv_ml', 'opencv_nonfree', 'opencv_objdetect', 'opencv_ocl', 'opencv_photo', 'opencv_stitching', 'opencv_superres', 'opencv_ts', 'opencv_video', 'opencv_videostab'],
	     LIBPATH = ['/usr/lib', '/usr/local/lib'],
	     CCFLAGS = OGLIMAGEMAINCflags)